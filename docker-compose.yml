networks:
  plapi:

services:
  traefik:
    image: traefik:v2.10
    restart: always
    ports:
      - "24880:80"
      - "24443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    networks:
      - plapi

  app:
    image: ghcr.io/hpware/esp32-postgres-logger-view-and-api:main
    restart: always
    networks:
      plapi:
    volumes:
      - ./public:/app/public
    environment:
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
      - S3_URL=http://s3:9000
      - S3_BUCKET=esp32-logger
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-minioadmin}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-minioadmin}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.logger.rule=Host(`logger.${DOMAIN}`)"
      - "traefik.http.routers.logger.entrypoints=websecure"
      - "traefik.http.routers.logger.tls.certresolver=letsencrypt"
      - "traefik.http.services.logger.loadbalancer.server.port=3000"
    depends_on:
      - pgdb
      - s3

  pgdb:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      plapi:
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  s3:
    image: minio/minio:latest
    restart: always
    volumes:
      - ./s3-data:/data
    networks:
      plapi:
    ports:
      - 24831:24831
    volumes:
      - ./s3-data:/data
    command: server /data --console-address ":24831"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`s3.${DOMAIN}`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls.certresolver=letsencrypt"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`s3-console.${DOMAIN}`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls.certresolver=letsencrypt"
      - "traefik.http.services.minio-console.loadbalancer.server.port=44831"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
    # CHANGE YOU CREDENTIALS HERE
    environment:
      MINIO_ROOT_USER: c9zzj
      MINIO_ROOT_PASSWORD: miniORjf0jzzise9jzoadminc39
  s3-init:
    image: minio/mc
    depends_on:
      s3:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_ACCESS_KEY:-minioadmin}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://s3:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/esp32-logger;
      /usr/bin/mc policy set public myminio/esp32-logger;
      exit 0;
      "